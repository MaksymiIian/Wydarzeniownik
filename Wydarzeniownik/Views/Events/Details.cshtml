@model Wydarzeniownik.Models.Event
@using System.Security.Claims

@{
    ViewData["Title"] = "Szczegóły wydarzenia";
}

<div class="container my-4">
    <div class="card shadow-sm">
        <!-- Używamy d-flex i justify-content-between, aby tytuł był na środku, a przyciski na prawej stronie -->
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h2 class="m-0">@Model.Title</h2>

            <!-- Sprawdzamy, czy zalogowany użytkownik jest autorem wydarzenia -->
            @if (User.Identity.IsAuthenticated && User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.UserId)
            {
                <div>
                    <!-- Przycisk edytuj -->
                    <a href="/Events/Edit/@Model.Id" class="btn btn-warning btn-sm">Edytuj</a>

                    <!-- Przycisk usuń -->
                    <form action="/Events/Delete/@Model.Id" method="post" style="display:inline;">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger btn-sm ml-2">Usuń</button>
                    </form>
                </div>
            }
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <p><strong>Data:</strong> @Model.Date.ToString("yyyy-MM-dd HH:mm")</p>
                    <p><strong>Lokalizacja:</strong> @Model.Location</p>
                    <p><strong>Autor:</strong> @Model.UserEmail</p> <!-- Wyświetlenie e-maila autora -->
                    <p><strong>Opis:</strong> @Model.Description</p>
                </div>
                <div class="col-md-6 text-center">
                    @if (!string.IsNullOrEmpty(Model.ImagePath))
                    {
                        <div class="event-image mt-3 text-center">
                            <img src="@Model.ImagePath" alt="Zdjęcie wydarzenia" class="img-fluid rounded shadow-sm"
                                 style="max-width: 100%; max-height: 400px; width: auto; height: auto;" />
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">Brak zdjęcia dla tego wydarzenia.</p>
                    }
                </div>
            </div>
            <hr />
            <div class="d-flex justify-content-between">
                <p><strong>Polubienia:</strong> @Model.LikeCount</p>
                @* <p><strong>Udostępnienia:</strong> @Model.ShareCount</p> *@
            </div>
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-header bg-secondary text-white">
            <h3>Komentarze</h3>
        </div>
        <div class="card-body">
            @if (Model.Comments.Any())
            {
                <ul class="list-group">
                    @foreach (var comment in Model.Comments)
                    {
                        <li class="list-group-item">
                            <strong>@comment.UserName</strong>: @comment.Content
                            <br />
                            <small class="text-muted">@comment.CreatedAt.ToString("yyyy-MM-dd HH:mm")</small>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="text-muted">Brak komentarzy dla tego wydarzenia.</p>
            }

            <h4 class="mt-4">Dodaj komentarz</h4>
            <form action="/Events/AddComment/@Model.Id" method="post">
                <div class="form-group">
                    <label for="content">Treść komentarza</label>
                    <textarea class="form-control" id="content" name="content" rows="3" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Dodaj komentarz</button>
            </form>
        </div>
    </div>
</div>
